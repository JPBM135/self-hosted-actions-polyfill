name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: ${{ github.ref }}

      - name: Get commits
        id: get_commits
        uses: actions/github-script@v3
        with:
          script: |
            const commits = await github.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: context.payload.before,
              head: context.payload.after
            });
            const commitsParsed =  commits.data.commits.map(commit => `- ${commit.commit.message} (${commit.author.login})`);

            core.setOutput('commits', commitsParsed.join('\n'));

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.get_commits.outputs.commits }}
          draft: false
          prerelease: false
